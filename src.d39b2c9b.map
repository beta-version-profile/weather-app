{"version":3,"sources":["src\\utils\\index.js","src\\framework\\ComponentFactory.js","src\\framework\\Component.js","src\\framework\\index.js","src\\Temperature\\Temperature.js","src\\Temperature\\index.js","src\\Counter\\Counter.js","src\\Counter\\index.js","src\\App\\App.js","src\\App\\index.js","src\\index.js"],"names":["createDomFragment","template","document","createElement","innerHTML","string","trim","content","clearDomChildren","domElement","appendDomFragment","domFragment","Array","isArray","append","buildDomFragment","host","elements","forEach","element","elementSpec","tag","classList","split","add","props","children","appendChild","bindScope","scope","names","name","bind","Error","ComponentFactory","mappings","register","componentClass","get","componentClassName","Component","state","_render","partialState","Object","assign","rendered","render","_createDomFragment","createDocumentFragment","componentCount","idBase","Date","getTime","componentMap","replace","match","p1","p2","offset","id","parsingResults","length","paramsRegex","exec","objectPropertyName","propValue","filter","segment","join","eventTypes","elementsWithListeners","querySelectorAll","map","eventType","hasAttribute","handlerName","getAttribute","addEventListener","keys","querySelector","cls","default","Temperature","t","unit","Counter","updateState","count","changeHandler","App","newValue","getElementById"],"mappings":";;;;;;;;ACAA,IAAMkC,mBAAmB;AACvBC,YAAU,EADa;AAEvBC,YAAU;AAAA,ADDL,IAAMpC,OCCiBkC,iBAAiBC,QAAjB,CAA0BE,eAAeN,ADDtC,ICCH,IAAiDM,CDDlErC,aCCD,IDDqB,SAAU;ACC/B,ADAV,GCFuB,GDEjBC,WAAWC,SAASC,aAAT,CAAuB,UAAvB,CAAjB;AEFF,ADGEmC,ADAArC,OCAK,IDAIG,SAAT,GAAqBC,OAAOC,IAAP,EAArB;ACAK,ADCL,SAAOL,ECDoBiC,ODCX3B,OAAhB,GCD4C4B,QAAjB,CAA0BI,kBAA1B,CAAtB;ACFP,ADEO,ADEN,CAJM;ACDkB,CAAzB;AGAA,AJOO,IAAM/B,cCFE0B,gCDEiB,SAAnB1B,gBAAmB,aAAc;AAC5CC,aAAWL,SAAX,GAAuB,EAAvB,mBGRO8E;ACCT,AJQE,SAAOzE,UAAP;AACD,CAHM;AMPP;ANYO,IAAMC,4CKZJwE,ILYwB,SAApBxE,iBAAoB,CAACD,UAAD,EAAaE,WAAb,EAA6B;AMX9D,AIDA,AVaE,IEVmB6B,EFUf5B,MAAMC,OAAN,CAAcF,WAAd,CAAJ,EAAgC;AEThC,AFUEF,eAAWK,MEVDE,AFUV,IEVF,EAAkBS,KAAlB,EAAyB,yBFUFd,WAArB;AQdJ,ANI2B,AQF3B,AVaG,GAFD,MAEO,IUbDT,SAAS0F,cAAT,CAAwB,MAAxB,CAAR;AVcInF,eAAWK,MAAX,CAAkBH,WAAlB,WOhBKuE;ACCT,AFCA,AJGI,AFYD,SEZMlE,IAAL,GAAYA,IAAZ;AACA,AFYF,SEZOS,AFYAhB,KEZL,GAAagB,EFYf,OEZwB,EAAtB;AACA,AFYH,CAPM,QELEgB,KAAL,GAAa,EAAb;AACA,SAAKC,OAAL,wBORKwC;ADET,ANOG,AFYI,IIlBcC,AJkBRpE,8CAAmB,SAAnBA,gBAAmB,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAClDA,WAASC,OAAT,CAAiB,uBAAe;AQnBlC,ARoBI,QAAIC,UAAUjB,SAASC,aAAT,CAAuB,OAAOiB,YAAYC,GAAnB,KAA2B,QAA3B,GAAsCD,YAAYC,GAAlD,GAAwD,KAA/E,CAAd;AInBF,AJoBE,QAAID,YAAYhB,GIpBNY,IAAZ,EAAkBS,AJoBhB,EAA2B,GIpB7B,EAAyB;AIA3B,AJA2B,AJqBrBN,cAAQf,SAAR,GAAoBgB,GEdf,SFc2BhB,SAAhC;AEbF,AFcC,aEdM,EAAP;AERuB,AFSxB,AFcC,IMvBiBkF,INuBblE,YAAYE,SAAhB,EAA2B,sFItBrBN,IADiB,EACXS,KADW;AAExB,AJqB4B;;AMtB7B,ANuBI,UAAI,OAAOL,EMvBHJ,IAAZ,EAAkBS,INuBSH,CMvB3B,EAAyB,AJUbqB,MFaJ,KAAiC,GEbf,KFatB,EAA+C;AMvB1B,AJWvB,AFaIvB,WEbCqB,KAAL,GAAaG,CFaGtB,MEbIuB,GFahB,GEbS,AFaezB,CEbD,EAAd,EAAkB,KAAKqB,EFaInB,GEb3B,EAA8BqB,IFaf,CAAsBpB,KAAtB,CAA4B,CEb3C,CAAb,CFa4B,CAAxB;AEZJ,AFaG,WEbEmB,OAAL,WETO;AEHgB,AFIvB,AFSD,AFaG,aItBK,KAAKjB,KAAL,CAAW2D,CAAX,GAAe,OAAf,CJsBG9D,EItBsB,KAAKG,EJsBnC,EAAkBD,CItBY,CAAW6D,CJsBzC,GItBF,2CJsB2BjE,YAAYE,MMzBjCN,GNyBJ,CM1BqB,EACXS,KADW;AFKxB,AJsBE;AMzBD,AN0BA,IQ3BiBiE,IR2Bb,EM1BCH,AN0BC,OAAOnE,IM1Bb,CAAiB,ON0BQC,GAAnB,KAA2B,QAA7B,CAAJ,EAA4C;AMzB1CmE,AN0BA,UAAIpE,GM1BG,MAAKK,GN0BIJ,EM1BT,CAAWmE,AN0BlB,CAAoBrE,IEdd,GFcN,EAA6BC,YAAYK,KAAzC;AM3Be,AJcjB,AFcC,KM5BD,KJcIqB,WAAW,KAAKC,MAAL,EAAf;AMdF,AFGE,AJYA,AFcA,QAAI3B,EEdA,KMfMJ,ENeC8B,EMfb,CR6BkBpB,CQ7BA,INeZ,GFcJ,EEdwB,AFcE,GM1BV,KJYhB,EAAkC,IIZlC,EAA6B,WAA7B;AEHgB,AFFO,AJkBrBoB,AFcA/B,mBEdW,IFcMI,CEdD6B,MFchB,EAA0B5B,UEdf,CAAwB0B,CFcGpB,OEd3B,CAAX,AFcA;AM1BH,AJaE,AFcA,kBInCgByD;AIID,ANkBhB,AFcAnE,SAAKW,C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","file":"src.d39b2c9b.map","sourcesContent":["\r\nexport const createDomFragment = string => {\r\n  const template = document.createElement('template');\r\n  template.innerHTML = string.trim();\r\n  return template.content;\r\n};\r\n\r\nexport const clearDomChildren = domElement => {\r\n  domElement.innerHTML = '';\r\n  return domElement;\r\n};\r\n\r\nexport const appendDomFragment = (domElement, domFragment) => {\r\n  if (Array.isArray(domFragment)) {\r\n    domElement.append(...domFragment);\r\n  } else {\r\n    domElement.append(domFragment);\r\n  }\r\n  return domElement;\r\n};\r\n\r\nexport const buildDomFragment = (host, elements) => {\r\n  elements.forEach(elementSpec => {\r\n    let element = document.createElement(typeof elementSpec.tag === 'string' ? elementSpec.tag : 'div');\r\n    if (elementSpec.innerHTML) {\r\n      element.innerHTML = elementSpec.innerHTML;\r\n    }\r\n    if (elementSpec.classList) {\r\n      if (typeof elementSpec.classList === 'string') {\r\n        elementSpec.classList = elementSpec.classList.split(' ');\r\n      }\r\n      element.classList.add(...elementSpec.classList);\r\n    }\r\n    if (!(typeof elementSpec.tag === 'string')) {\r\n      new elementSpec.tag(element, elementSpec.props);\r\n    }\r\n    if (elementSpec.children) {\r\n      buildDomFragment(element, elementSpec.children);\r\n    }\r\n    host.appendChild(element);\r\n  });\r\n  return host;\r\n};\r\n\r\nexport const bindScope = (scope, ...names) => {\r\n  names.forEach(name => {\r\n    if (typeof scope[name] === 'function') {\r\n      scope[name] = scope[name].bind(scope);\r\n    } else {\r\n      throw Error(\r\n        `Expected ${name} to be a function. Instead ${name} is ${typeof scope[name]}`\r\n      );\r\n    }\r\n  });\r\n};\r\n","const ComponentFactory = {\r\n  mappings: {},\r\n  register: componentClass => ComponentFactory.mappings[componentClass.name] = componentClass,\r\n  get: componentClassName => ComponentFactory.mappings[componentClassName],\r\n};\r\nexport default ComponentFactory;\r\n","import { clearDomChildren, appendDomFragment, buildDomFragment } from \"../utils\";\r\nimport ComponentFactory from \"../framework/ComponentFactory\";\r\n\r\nexport default class Component {\r\n  constructor(host, props) {\r\n    this.host = host;\r\n    this.props = props || {};\r\n    this.state = {};\r\n    this._render();\r\n  }\r\n\r\n  render() {\r\n    return '';\r\n  }\r\n\r\n  updateState(partialState) {\r\n    this.state = Object.assign({}, this.state, partialState);\r\n    this._render();\r\n  }\r\n\r\n  _render() {\r\n    let rendered = this.render();\r\n    if (typeof rendered === 'string') {\r\n      rendered = this._createDomFragment(rendered);\r\n    }\r\n    if (Array.isArray(rendered) && rendered[0].tag) {\r\n      rendered = buildDomFragment(document.createDocumentFragment(), rendered);\r\n    }\r\n    appendDomFragment(clearDomChildren(this.host), rendered);\r\n  }\r\n\r\n  _createDomFragment(string) {\r\n    const template = document.createElement('template');\r\n\r\n    let componentCount = 0;\r\n    let idBase = new Date().getTime();\r\n    let componentMap = {};\r\n\r\n    string = string.trim().replace(/<([A-Z][a-zA-Z]*)(.*)\\/>/g, (match, p1, p2, offset) => {\r\n      const id = 'z' + idBase + (componentCount++);\r\n\r\n      // extract props\r\n      let props = {};\r\n      let parsingResults;\r\n      p2 = p2.trim();\r\n      if (p2.length) {\r\n        const paramsRegex = /(\\S+)=['\"]?((?:(?!\\/>|>|\"|'|\\s).)+)/g;\r\n        while ((parsingResults = paramsRegex.exec(p2)) !== null) {\r\n          let objectPropertyName = parsingResults[2].match(/{(.*)}/);\r\n          const propValue = objectPropertyName\r\n            ? this[objectPropertyName[1].split('.').filter(segment => segment !== 'this').join('.')]\r\n            : parsingResults[2];\r\n          props[parsingResults[1]] = propValue;\r\n        }\r\n      }\r\n\r\n      componentMap[id] = {\r\n        name: p1,\r\n        props: props,\r\n      };\r\n      return `<div id=\"${id}\"></div>`;\r\n    });\r\n    template.innerHTML = string;\r\n\r\n    // manage event handlers\r\n    const eventTypes = ['click', 'mouseup', 'mousedown', 'mouseover', 'mousein', 'mouseout',\r\n      'change', 'input', 'keyup', 'keydown',\r\n      'focus', 'blur'\r\n    ];\r\n    const elementsWithListeners = template.content.querySelectorAll([eventTypes].map(eventType => 'on-' + eventType));\r\n    elementsWithListeners.forEach(element => {\r\n      eventTypes.forEach(eventType => {\r\n        if (element.hasAttribute('on-' + eventType)) {\r\n          let handlerName = element.getAttribute('on-' + eventType).match(/{(.*)}/)[1];\r\n          handlerName = handlerName.split('.').filter(segment => segment !== 'this').join('.');\r\n          element.addEventListener(eventType, this[handlerName].bind(this));\r\n        }\r\n      });\r\n    });\r\n\r\n    // render mapped components\r\n    Object.keys(componentMap).forEach(id => {\r\n      let host = template.content.querySelector('#' + id);\r\n      const cls = ComponentFactory.get(componentMap[id].name);\r\n      new cls(host, componentMap[id].props);\r\n    });\r\n\r\n    return template.content;\r\n  }\r\n}\r\n","export { default as Component } from './Component';\r\n","import { Component } from \"../framework\";\r\nimport ComponentFactory from \"../framework/ComponentFactory\";\r\n\r\nexport default class Temperature extends Component {\r\n  constructor(host, props) {\r\n    super(host, props);\r\n  }\r\n\r\n  render() {\r\n    return this.props.t + '&deg;' + this.props.unit;\r\n  }\r\n}\r\nComponentFactory.register(Temperature);\r\n","export { default as Temperature } from './Temperature';\r\n","import { Component } from \"../framework\";\r\nimport ComponentFactory from \"../framework/ComponentFactory\";\r\nimport {bindScope} from \"../utils\";\r\n\r\nexport default class Counter extends Component {\r\n  constructor(host, props) {\r\n    super(host, props);\r\n    this.updateState({\r\n      count: this.props.count,\r\n    });\r\n    bindScope(this, 'decrement', 'increment');\r\n  }\r\n\r\n  render() {\r\n    return `<input type=\"button\" value=\"-\" on-Click={this.decrement} />\r\n        ${this.state.count}\r\n        <input type=\"button\" value=\"+\" on-Click={this.increment} />`;\r\n  }\r\n\r\n  decrement() {\r\n    this.props.changeHandler(+this.state.count - 1);\r\n  }\r\n\r\n  increment() {\r\n    this.props.changeHandler(+this.state.count + 1);\r\n  }\r\n}\r\nComponentFactory.register(Counter);\r\n","export { default as Counter } from './Counter';\r\n","import { Component } from \"../framework\";\r\nimport ComponentFactory from \"../framework/ComponentFactory\";\r\nimport { Temperature } from \"../Temperature\";\r\nimport { Counter } from \"../Counter\";\r\nimport { bindScope } from \"../utils\";\r\n\r\nexport default class App extends Component {\r\n  constructor(host) {\r\n    super(host);\r\n    bindScope(this, 'updateCount');\r\n    this.updateState({\r\n      count: 5,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return `<div class=\"flex-column\">\r\n              <div>\r\n                Weather ${this.state.count}\r\n                <Counter count=${this.state.count} changeHandler={this.updateCount} />\r\n              </div>\r\n              <Temperature t=-10 unit=\"C\" />\r\n              <div class=\"flex-row\">\r\n                  <Temperature t=-9 unit=\"C\"/>\r\n                  <Temperature t=-8 unit=\"C\" />\r\n                  <Temperature t=-8 unit=\"C\" />\r\n                  <Temperature t=-5 unit=\"C\" />\r\n                  <Temperature t=-32 unit=\"C\" />\r\n              </div>\r\n           </div>`;\r\n  }\r\n\r\n  updateCount(newValue) {\r\n    this.updateState({\r\n      count: newValue,\r\n    });\r\n  }\r\n}\r\nComponentFactory.register(App);\r\n","export { default as App } from './App';\r\n","import { App } from './App';\r\n\r\nnew App(document.getElementById('root'));\r\n"]}